"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/exhibitions",{

/***/ "(pages-dir-browser)/./src/hooks/useExhibitions.ts":
/*!*************************************!*\
  !*** ./src/hooks/useExhibitions.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExhibitions: () => (/* binding */ useExhibitions)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useExhibitions() {\n    const [exhibitions, setExhibitions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useExhibitions.useEffect\": ()=>{\n            const fetchExhibitions = {\n                \"useExhibitions.useEffect.fetchExhibitions\": async ()=>{\n                    setLoading(true);\n                    setError(null);\n                    try {\n                        // Harvard API\n                        const harvardRes = await fetch(\"https://api.harvardartmuseums.org/exhibition?apikey=a8a509db-aabd-42eb-8e9f-3c518d4155a0\");\n                        if (!harvardRes.ok) throw new Error(\"Failed to fetch Harvard exhibitions\");\n                        const harvardData = await harvardRes.json();\n                        const harvardExhibitions = await Promise.all((harvardData.records || []).map({\n                            \"useExhibitions.useEffect.fetchExhibitions\": async (ex)=>{\n                                let imageUrl, artist, medium, dated;\n                                try {\n                                    const artRes = await fetch(\"https://api.harvardartmuseums.org/object?exhibition=\".concat(ex.id, \"&size=1&apikey=a8a509db-aabd-42eb-8e9f-3c518d4155a0\"));\n                                    if (artRes.ok) {\n                                        const artData = await artRes.json();\n                                        if (artData.records && artData.records[0]) {\n                                            var _art_images_;\n                                            const art = artData.records[0];\n                                            // Prefer primaryimageurl, then baseimageurl, else null\n                                            let img = art.primaryimageurl || art.images && ((_art_images_ = art.images[0]) === null || _art_images_ === void 0 ? void 0 : _art_images_.baseimageurl) || null;\n                                            // Optionally resize if it's a Harvard URN\n                                            if (img && img.startsWith(\"https://nrs.harvard.edu/urn-3:HUAM:\")) {\n                                                img += \"?height=150&width=150\";\n                                            }\n                                            imageUrl = img;\n                                            artist = art.people && art.people[0] ? art.people[0].name : undefined;\n                                            medium = art.medium;\n                                            dated = art.dated;\n                                        }\n                                    }\n                                } catch (e) {\n                                    imageUrl = undefined;\n                                }\n                                return {\n                                    id: \"harvard-\".concat(ex.id),\n                                    title: ex.title || \"Untitled Exhibition\",\n                                    venue: ex.venue || \"Harvard Art Museums\",\n                                    url: ex.url || \"https://harvardartmuseums.org/visit/exhibitions\",\n                                    source: \"Harvard\",\n                                    imageUrl,\n                                    description: ex.description,\n                                    begindate: ex.begindate,\n                                    enddate: ex.enddate,\n                                    artist,\n                                    medium,\n                                    dated\n                                };\n                            }\n                        }[\"useExhibitions.useEffect.fetchExhibitions\"]));\n                        // The Met API\n                        const metRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=exhibition\");\n                        if (!metRes.ok) throw new Error(\"Failed to fetch Met exhibitions\");\n                        const metData = await metRes.json();\n                        const metExhibitions = await Promise.all((metData.objectIDs || []).slice(0, 5).map({\n                            \"useExhibitions.useEffect.fetchExhibitions\": async (id)=>{\n                                const objRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\".concat(id));\n                                const objData = await objRes.json();\n                                return {\n                                    id: \"met-\".concat(objData.objectID),\n                                    title: objData.title || \"Untitled\",\n                                    venue: objData.repository || \"The Met\",\n                                    url: objData.objectURL,\n                                    source: \"The Met\",\n                                    imageUrl: objData.primaryImageSmall || objData.primaryImage,\n                                    artist: objData.artistDisplayName,\n                                    medium: objData.medium,\n                                    dated: objData.objectDate,\n                                    description: objData.creditLine,\n                                    begindate: undefined,\n                                    enddate: undefined\n                                };\n                            }\n                        }[\"useExhibitions.useEffect.fetchExhibitions\"]));\n                        setExhibitions([\n                            ...harvardExhibitions,\n                            ...metExhibitions\n                        ]);\n                    } catch (err) {\n                        setError(err.message || \"Failed to fetch exhibitions\");\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useExhibitions.useEffect.fetchExhibitions\"];\n            fetchExhibitions();\n        }\n    }[\"useExhibitions.useEffect\"], []);\n    return {\n        exhibitions,\n        loading,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFHckMsU0FBU0U7SUFDZCxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0gsK0NBQVFBLENBQWUsRUFBRTtJQUMvRCxNQUFNLENBQUNJLFNBQVNDLFdBQVcsR0FBR0wsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDTSxPQUFPQyxTQUFTLEdBQUdQLCtDQUFRQSxDQUFnQjtJQUVsREQsZ0RBQVNBO29DQUFDO1lBQ1IsTUFBTVM7NkRBQW1CO29CQUN2QkgsV0FBVztvQkFDWEUsU0FBUztvQkFFVCxJQUFJO3dCQUNGLGNBQWM7d0JBQ2QsTUFBTUUsYUFBYSxNQUFNQyxNQUN0Qjt3QkFFSCxJQUFJLENBQUNELFdBQVdFLEVBQUUsRUFDaEIsTUFBTSxJQUFJQyxNQUFNO3dCQUNsQixNQUFNQyxjQUFjLE1BQU1KLFdBQVdLLElBQUk7d0JBQ3pDLE1BQU1DLHFCQUFxQixNQUFNQyxRQUFRQyxHQUFHLENBQzFDLENBQUNKLFlBQVlLLE9BQU8sSUFBSSxFQUFFLEVBQUVDLEdBQUc7eUVBQUMsT0FBT0M7Z0NBQ3JDLElBQUlDLFVBQVVDLFFBQVFDLFFBQVFDO2dDQUM5QixJQUFJO29DQUNGLE1BQU1DLFNBQVMsTUFBTWYsTUFDbkIsdURBQTZELE9BQU5VLEdBQUdNLEVBQUUsRUFBQztvQ0FFL0QsSUFBSUQsT0FBT2QsRUFBRSxFQUFFO3dDQUNiLE1BQU1nQixVQUFVLE1BQU1GLE9BQU9YLElBQUk7d0NBQ2pDLElBQUlhLFFBQVFULE9BQU8sSUFBSVMsUUFBUVQsT0FBTyxDQUFDLEVBQUUsRUFBRTtnREFLeEJVOzRDQUpqQixNQUFNQSxNQUFNRCxRQUFRVCxPQUFPLENBQUMsRUFBRTs0Q0FDOUIsdURBQXVEOzRDQUN2RCxJQUFJVyxNQUNGRCxJQUFJRSxlQUFlLElBQ2xCRixJQUFJRyxNQUFNLE1BQUlILGVBQUFBLElBQUlHLE1BQU0sQ0FBQyxFQUFFLGNBQWJILG1DQUFBQSxhQUFlSSxZQUFZLEtBQzFDOzRDQUNGLDBDQUEwQzs0Q0FDMUMsSUFBSUgsT0FBT0EsSUFBSUksVUFBVSxDQUFDLHdDQUF3QztnREFDaEVKLE9BQU87NENBQ1Q7NENBQ0FSLFdBQVdROzRDQUNYUCxTQUNFTSxJQUFJTSxNQUFNLElBQUlOLElBQUlNLE1BQU0sQ0FBQyxFQUFFLEdBQ3ZCTixJQUFJTSxNQUFNLENBQUMsRUFBRSxDQUFDQyxJQUFJLEdBQ2xCQzs0Q0FDTmIsU0FBU0ssSUFBSUwsTUFBTTs0Q0FDbkJDLFFBQVFJLElBQUlKLEtBQUs7d0NBQ25CO29DQUNGO2dDQUNGLEVBQUUsVUFBTTtvQ0FDTkgsV0FBV2U7Z0NBQ2I7Z0NBQ0EsT0FBTztvQ0FDTFYsSUFBSSxXQUFpQixPQUFOTixHQUFHTSxFQUFFO29DQUNwQlcsT0FBT2pCLEdBQUdpQixLQUFLLElBQUk7b0NBQ25CQyxPQUFPbEIsR0FBR2tCLEtBQUssSUFBSTtvQ0FDbkJDLEtBQUtuQixHQUFHbUIsR0FBRyxJQUFJO29DQUNmQyxRQUFRO29DQUNSbkI7b0NBQ0FvQixhQUFhckIsR0FBR3FCLFdBQVc7b0NBQzNCQyxXQUFXdEIsR0FBR3NCLFNBQVM7b0NBQ3ZCQyxTQUFTdkIsR0FBR3VCLE9BQU87b0NBQ25CckI7b0NBQ0FDO29DQUNBQztnQ0FDRjs0QkFDRjs7d0JBR0YsY0FBYzt3QkFDZCxNQUFNb0IsU0FBUyxNQUFNbEMsTUFDbEI7d0JBRUgsSUFBSSxDQUFDa0MsT0FBT2pDLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07d0JBQ2hDLE1BQU1pQyxVQUFVLE1BQU1ELE9BQU85QixJQUFJO3dCQUNqQyxNQUFNZ0MsaUJBQWlCLE1BQU05QixRQUFRQyxHQUFHLENBQ3RDLENBQUM0QixRQUFRRSxTQUFTLElBQUksRUFBRSxFQUFFQyxLQUFLLENBQUMsR0FBRyxHQUFHN0IsR0FBRzt5RUFBQyxPQUFPTztnQ0FDL0MsTUFBTXVCLFNBQVMsTUFBTXZDLE1BQ25CLG9FQUF1RSxPQUFIZ0I7Z0NBRXRFLE1BQU13QixVQUFVLE1BQU1ELE9BQU9uQyxJQUFJO2dDQUNqQyxPQUFPO29DQUNMWSxJQUFJLE9BQXdCLE9BQWpCd0IsUUFBUUMsUUFBUTtvQ0FDM0JkLE9BQU9hLFFBQVFiLEtBQUssSUFBSTtvQ0FDeEJDLE9BQU9ZLFFBQVFFLFVBQVUsSUFBSTtvQ0FDN0JiLEtBQUtXLFFBQVFHLFNBQVM7b0NBQ3RCYixRQUFRO29DQUNSbkIsVUFBVTZCLFFBQVFJLGlCQUFpQixJQUFJSixRQUFRSyxZQUFZO29DQUMzRGpDLFFBQVE0QixRQUFRTSxpQkFBaUI7b0NBQ2pDakMsUUFBUTJCLFFBQVEzQixNQUFNO29DQUN0QkMsT0FBTzBCLFFBQVFPLFVBQVU7b0NBQ3pCaEIsYUFBYVMsUUFBUVEsVUFBVTtvQ0FDL0JoQixXQUFXTjtvQ0FDWE8sU0FBU1A7Z0NBQ1g7NEJBQ0Y7O3dCQUdGakMsZUFBZTsrQkFBSVk7K0JBQXVCK0I7eUJBQWU7b0JBQzNELEVBQUUsT0FBT2EsS0FBVTt3QkFDakJwRCxTQUFTb0QsSUFBSUMsT0FBTyxJQUFJO29CQUMxQixTQUFVO3dCQUNSdkQsV0FBVztvQkFDYjtnQkFDRjs7WUFFQUc7UUFDRjttQ0FBRyxFQUFFO0lBRUwsT0FBTztRQUFFTjtRQUFhRTtRQUFTRTtJQUFNO0FBQ3ZDIiwic291cmNlcyI6WyIvVXNlcnMvbmljaG9sYXNjYW5ueS9Eb2N1bWVudHMvZXhoaWJpdGlvbi1jdXJhdG9yL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBFeGhpYml0aW9uIH0gZnJvbSBcIi4uL3R5cGVzL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VFeGhpYml0aW9ucygpIHtcbiAgY29uc3QgW2V4aGliaXRpb25zLCBzZXRFeGhpYml0aW9uc10gPSB1c2VTdGF0ZTxFeGhpYml0aW9uW10+KFtdKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBmZXRjaEV4aGliaXRpb25zID0gYXN5bmMgKCkgPT4ge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyBIYXJ2YXJkIEFQSVxuICAgICAgICBjb25zdCBoYXJ2YXJkUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgYGh0dHBzOi8vYXBpLmhhcnZhcmRhcnRtdXNldW1zLm9yZy9leGhpYml0aW9uP2FwaWtleT1hOGE1MDlkYi1hYWJkLTQyZWItOGU5Zi0zYzUxOGQ0MTU1YTBgXG4gICAgICAgICk7XG4gICAgICAgIGlmICghaGFydmFyZFJlcy5vaylcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggSGFydmFyZCBleGhpYml0aW9uc1wiKTtcbiAgICAgICAgY29uc3QgaGFydmFyZERhdGEgPSBhd2FpdCBoYXJ2YXJkUmVzLmpzb24oKTtcbiAgICAgICAgY29uc3QgaGFydmFyZEV4aGliaXRpb25zID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICAgICAgKGhhcnZhcmREYXRhLnJlY29yZHMgfHwgW10pLm1hcChhc3luYyAoZXg6IGFueSkgPT4ge1xuICAgICAgICAgICAgbGV0IGltYWdlVXJsLCBhcnRpc3QsIG1lZGl1bSwgZGF0ZWQ7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBjb25zdCBhcnRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgICAgICBgaHR0cHM6Ly9hcGkuaGFydmFyZGFydG11c2V1bXMub3JnL29iamVjdD9leGhpYml0aW9uPSR7ZXguaWR9JnNpemU9MSZhcGlrZXk9YThhNTA5ZGItYWFiZC00MmViLThlOWYtM2M1MThkNDE1NWEwYFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBpZiAoYXJ0UmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXJ0RGF0YSA9IGF3YWl0IGFydFJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgaWYgKGFydERhdGEucmVjb3JkcyAmJiBhcnREYXRhLnJlY29yZHNbMF0pIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGFydCA9IGFydERhdGEucmVjb3Jkc1swXTtcbiAgICAgICAgICAgICAgICAgIC8vIFByZWZlciBwcmltYXJ5aW1hZ2V1cmwsIHRoZW4gYmFzZWltYWdldXJsLCBlbHNlIG51bGxcbiAgICAgICAgICAgICAgICAgIGxldCBpbWcgPVxuICAgICAgICAgICAgICAgICAgICBhcnQucHJpbWFyeWltYWdldXJsIHx8XG4gICAgICAgICAgICAgICAgICAgIChhcnQuaW1hZ2VzICYmIGFydC5pbWFnZXNbMF0/LmJhc2VpbWFnZXVybCkgfHxcbiAgICAgICAgICAgICAgICAgICAgbnVsbDtcbiAgICAgICAgICAgICAgICAgIC8vIE9wdGlvbmFsbHkgcmVzaXplIGlmIGl0J3MgYSBIYXJ2YXJkIFVSTlxuICAgICAgICAgICAgICAgICAgaWYgKGltZyAmJiBpbWcuc3RhcnRzV2l0aChcImh0dHBzOi8vbnJzLmhhcnZhcmQuZWR1L3Vybi0zOkhVQU06XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIGltZyArPSBcIj9oZWlnaHQ9MTUwJndpZHRoPTE1MFwiO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgaW1hZ2VVcmwgPSBpbWc7XG4gICAgICAgICAgICAgICAgICBhcnRpc3QgPVxuICAgICAgICAgICAgICAgICAgICBhcnQucGVvcGxlICYmIGFydC5wZW9wbGVbMF1cbiAgICAgICAgICAgICAgICAgICAgICA/IGFydC5wZW9wbGVbMF0ubmFtZVxuICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgbWVkaXVtID0gYXJ0Lm1lZGl1bTtcbiAgICAgICAgICAgICAgICAgIGRhdGVkID0gYXJ0LmRhdGVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgIGltYWdlVXJsID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgaWQ6IGBoYXJ2YXJkLSR7ZXguaWR9YCxcbiAgICAgICAgICAgICAgdGl0bGU6IGV4LnRpdGxlIHx8IFwiVW50aXRsZWQgRXhoaWJpdGlvblwiLFxuICAgICAgICAgICAgICB2ZW51ZTogZXgudmVudWUgfHwgXCJIYXJ2YXJkIEFydCBNdXNldW1zXCIsXG4gICAgICAgICAgICAgIHVybDogZXgudXJsIHx8IFwiaHR0cHM6Ly9oYXJ2YXJkYXJ0bXVzZXVtcy5vcmcvdmlzaXQvZXhoaWJpdGlvbnNcIixcbiAgICAgICAgICAgICAgc291cmNlOiBcIkhhcnZhcmRcIixcbiAgICAgICAgICAgICAgaW1hZ2VVcmwsXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBleC5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgYmVnaW5kYXRlOiBleC5iZWdpbmRhdGUsXG4gICAgICAgICAgICAgIGVuZGRhdGU6IGV4LmVuZGRhdGUsXG4gICAgICAgICAgICAgIGFydGlzdCxcbiAgICAgICAgICAgICAgbWVkaXVtLFxuICAgICAgICAgICAgICBkYXRlZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBUaGUgTWV0IEFQSVxuICAgICAgICBjb25zdCBtZXRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICBgaHR0cHM6Ly9jb2xsZWN0aW9uYXBpLm1ldG11c2V1bS5vcmcvcHVibGljL2NvbGxlY3Rpb24vdjEvc2VhcmNoP2hhc0ltYWdlcz10cnVlJnE9ZXhoaWJpdGlvbmBcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKCFtZXRSZXMub2spIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBNZXQgZXhoaWJpdGlvbnNcIik7XG4gICAgICAgIGNvbnN0IG1ldERhdGEgPSBhd2FpdCBtZXRSZXMuanNvbigpO1xuICAgICAgICBjb25zdCBtZXRFeGhpYml0aW9ucyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICAgIChtZXREYXRhLm9iamVjdElEcyB8fCBbXSkuc2xpY2UoMCwgNSkubWFwKGFzeW5jIChpZDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBvYmpSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgICAgYGh0dHBzOi8vY29sbGVjdGlvbmFwaS5tZXRtdXNldW0ub3JnL3B1YmxpYy9jb2xsZWN0aW9uL3YxL29iamVjdHMvJHtpZH1gXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY29uc3Qgb2JqRGF0YSA9IGF3YWl0IG9ialJlcy5qc29uKCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICBpZDogYG1ldC0ke29iakRhdGEub2JqZWN0SUR9YCxcbiAgICAgICAgICAgICAgdGl0bGU6IG9iakRhdGEudGl0bGUgfHwgXCJVbnRpdGxlZFwiLFxuICAgICAgICAgICAgICB2ZW51ZTogb2JqRGF0YS5yZXBvc2l0b3J5IHx8IFwiVGhlIE1ldFwiLFxuICAgICAgICAgICAgICB1cmw6IG9iakRhdGEub2JqZWN0VVJMLFxuICAgICAgICAgICAgICBzb3VyY2U6IFwiVGhlIE1ldFwiLFxuICAgICAgICAgICAgICBpbWFnZVVybDogb2JqRGF0YS5wcmltYXJ5SW1hZ2VTbWFsbCB8fCBvYmpEYXRhLnByaW1hcnlJbWFnZSxcbiAgICAgICAgICAgICAgYXJ0aXN0OiBvYmpEYXRhLmFydGlzdERpc3BsYXlOYW1lLFxuICAgICAgICAgICAgICBtZWRpdW06IG9iakRhdGEubWVkaXVtLFxuICAgICAgICAgICAgICBkYXRlZDogb2JqRGF0YS5vYmplY3REYXRlLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogb2JqRGF0YS5jcmVkaXRMaW5lLFxuICAgICAgICAgICAgICBiZWdpbmRhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgZW5kZGF0ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIHNldEV4aGliaXRpb25zKFsuLi5oYXJ2YXJkRXhoaWJpdGlvbnMsIC4uLm1ldEV4aGliaXRpb25zXSk7XG4gICAgICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgICAgICBzZXRFcnJvcihlcnIubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBmZXRjaCBleGhpYml0aW9uc1wiKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmZXRjaEV4aGliaXRpb25zKCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4geyBleGhpYml0aW9ucywgbG9hZGluZywgZXJyb3IgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZUV4aGliaXRpb25zIiwiZXhoaWJpdGlvbnMiLCJzZXRFeGhpYml0aW9ucyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsImZldGNoRXhoaWJpdGlvbnMiLCJoYXJ2YXJkUmVzIiwiZmV0Y2giLCJvayIsIkVycm9yIiwiaGFydmFyZERhdGEiLCJqc29uIiwiaGFydmFyZEV4aGliaXRpb25zIiwiUHJvbWlzZSIsImFsbCIsInJlY29yZHMiLCJtYXAiLCJleCIsImltYWdlVXJsIiwiYXJ0aXN0IiwibWVkaXVtIiwiZGF0ZWQiLCJhcnRSZXMiLCJpZCIsImFydERhdGEiLCJhcnQiLCJpbWciLCJwcmltYXJ5aW1hZ2V1cmwiLCJpbWFnZXMiLCJiYXNlaW1hZ2V1cmwiLCJzdGFydHNXaXRoIiwicGVvcGxlIiwibmFtZSIsInVuZGVmaW5lZCIsInRpdGxlIiwidmVudWUiLCJ1cmwiLCJzb3VyY2UiLCJkZXNjcmlwdGlvbiIsImJlZ2luZGF0ZSIsImVuZGRhdGUiLCJtZXRSZXMiLCJtZXREYXRhIiwibWV0RXhoaWJpdGlvbnMiLCJvYmplY3RJRHMiLCJzbGljZSIsIm9ialJlcyIsIm9iakRhdGEiLCJvYmplY3RJRCIsInJlcG9zaXRvcnkiLCJvYmplY3RVUkwiLCJwcmltYXJ5SW1hZ2VTbWFsbCIsInByaW1hcnlJbWFnZSIsImFydGlzdERpc3BsYXlOYW1lIiwib2JqZWN0RGF0ZSIsImNyZWRpdExpbmUiLCJlcnIiLCJtZXNzYWdlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useExhibitions.ts\n"));

/***/ })

});