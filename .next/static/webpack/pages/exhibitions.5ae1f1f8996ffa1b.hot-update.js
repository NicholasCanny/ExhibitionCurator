"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/exhibitions",{

/***/ "(pages-dir-browser)/./src/hooks/useExhibitions.ts":
/*!*************************************!*\
  !*** ./src/hooks/useExhibitions.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExhibitions: () => (/* binding */ useExhibitions)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useExhibitions() {\n    const [exhibitions, setExhibitions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useExhibitions.useEffect\": ()=>{\n            const fetchExhibitions = {\n                \"useExhibitions.useEffect.fetchExhibitions\": async ()=>{\n                    setLoading(true);\n                    setError(null);\n                    try {\n                        let harvardArtworks = [];\n                        let metArtworks = [];\n                        // Harvard OBJECTS API (individual artworks)\n                        try {\n                            const harvardRes = await fetch(\"https://api.harvardartmuseums.org/object?size=10&hasimage=1&apikey=a8a509db-aabd-42eb-8e9f-3c518d4155a0\");\n                            if (harvardRes.ok) {\n                                const harvardData = await harvardRes.json();\n                                console.log(\"Harvard API Response:\", harvardData); // Debug log\n                                harvardArtworks = (harvardData.records || []).map({\n                                    \"useExhibitions.useEffect.fetchExhibitions\": (artwork)=>{\n                                        var _artwork_people_, _artwork_people;\n                                        return {\n                                            id: \"harvard-\".concat(artwork.id),\n                                            title: artwork.title || \"Untitled Artwork\",\n                                            venue: \"Harvard Art Museums\",\n                                            url: artwork.url || \"https://harvardartmuseums.org/collections/object/\".concat(artwork.id),\n                                            source: \"Harvard\",\n                                            imageUrl: artwork.primaryimageurl || null,\n                                            description: artwork.description || artwork.labeltext || \"No description available\",\n                                            artist: ((_artwork_people = artwork.people) === null || _artwork_people === void 0 ? void 0 : (_artwork_people_ = _artwork_people[0]) === null || _artwork_people_ === void 0 ? void 0 : _artwork_people_.name) || \"Unknown Artist\",\n                                            medium: artwork.medium || \"Unknown Medium\",\n                                            dated: artwork.dated || artwork.datebegin || \"Unknown Date\",\n                                            begindate: undefined,\n                                            enddate: undefined\n                                        };\n                                    }\n                                }[\"useExhibitions.useEffect.fetchExhibitions\"]);\n                            } else {\n                                console.error(\"Harvard API Error:\", harvardRes.status, harvardRes.statusText);\n                            }\n                        } catch (harvardError) {\n                            console.error(\"Harvard API failed:\", harvardError);\n                        }\n                        // Met API (individual artworks)\n                        try {\n                            const metRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=painting\");\n                            if (metRes.ok) {\n                                const metData = await metRes.json();\n                                metArtworks = await Promise.all((metData.objectIDs || []).slice(0, 10).map({\n                                    \"useExhibitions.useEffect.fetchExhibitions\": async (id)=>{\n                                        try {\n                                            const objRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\".concat(id));\n                                            const objData = await objRes.json();\n                                            return {\n                                                id: \"met-\".concat(objData.objectID),\n                                                title: objData.title || \"Untitled\",\n                                                venue: objData.repository || \"The Met\",\n                                                url: objData.objectURL,\n                                                source: \"The Met\",\n                                                imageUrl: objData.primaryImageSmall || objData.primaryImage || null,\n                                                artist: objData.artistDisplayName || \"Unknown Artist\",\n                                                medium: objData.medium || \"Unknown Medium\",\n                                                dated: objData.objectDate || \"Unknown Date\",\n                                                description: objData.creditLine || \"No description available\",\n                                                begindate: undefined,\n                                                enddate: undefined\n                                            };\n                                        } catch (e) {\n                                            return null;\n                                        }\n                                    }\n                                }[\"useExhibitions.useEffect.fetchExhibitions\"]));\n                                metArtworks = metArtworks.filter(Boolean);\n                            }\n                        } catch (metError) {\n                            console.error(\"Met API failed:\", metError);\n                        }\n                        setExhibitions([\n                            ...harvardArtworks,\n                            ...metArtworks\n                        ]);\n                        if (harvardArtworks.length === 0 && metArtworks.length === 0) {\n                            setError(\"Unable to fetch artworks from either museum API\");\n                        }\n                    } catch (err) {\n                        setError(err.message || \"Failed to fetch artworks\");\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useExhibitions.useEffect.fetchExhibitions\"];\n            fetchExhibitions();\n        }\n    }[\"useExhibitions.useEffect\"], []);\n    return {\n        exhibitions,\n        loading,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFHckMsU0FBU0U7SUFDZCxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0gsK0NBQVFBLENBQWUsRUFBRTtJQUMvRCxNQUFNLENBQUNJLFNBQVNDLFdBQVcsR0FBR0wsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDTSxPQUFPQyxTQUFTLEdBQUdQLCtDQUFRQSxDQUFnQjtJQUVsREQsZ0RBQVNBO29DQUFDO1lBQ1IsTUFBTVM7NkRBQW1CO29CQUN2QkgsV0FBVztvQkFDWEUsU0FBUztvQkFFVCxJQUFJO3dCQUNGLElBQUlFLGtCQUFnQyxFQUFFO3dCQUN0QyxJQUFJQyxjQUE0QixFQUFFO3dCQUVsQyw0Q0FBNEM7d0JBQzVDLElBQUk7NEJBQ0YsTUFBTUMsYUFBYSxNQUFNQyxNQUN0Qjs0QkFHSCxJQUFJRCxXQUFXRSxFQUFFLEVBQUU7Z0NBQ2pCLE1BQU1DLGNBQWMsTUFBTUgsV0FBV0ksSUFBSTtnQ0FDekNDLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJILGNBQWMsWUFBWTtnQ0FFL0RMLGtCQUFrQixDQUFDSyxZQUFZSSxPQUFPLElBQUksRUFBRSxFQUFFQyxHQUFHO2lGQUFDLENBQUNDOzRDQVF6Q0Esa0JBQUFBOytDQVIyRDs0Q0FDbkVDLElBQUksV0FBc0IsT0FBWEQsUUFBUUMsRUFBRTs0Q0FDekJDLE9BQU9GLFFBQVFFLEtBQUssSUFBSTs0Q0FDeEJDLE9BQU87NENBQ1BDLEtBQUtKLFFBQVFJLEdBQUcsSUFBSSxvREFBK0QsT0FBWEosUUFBUUMsRUFBRTs0Q0FDbEZJLFFBQVE7NENBQ1JDLFVBQVVOLFFBQVFPLGVBQWUsSUFBSTs0Q0FDckNDLGFBQWFSLFFBQVFRLFdBQVcsSUFBSVIsUUFBUVMsU0FBUyxJQUFJOzRDQUN6REMsUUFBUVYsRUFBQUEsa0JBQUFBLFFBQVFXLE1BQU0sY0FBZFgsdUNBQUFBLG1CQUFBQSxlQUFnQixDQUFDLEVBQUUsY0FBbkJBLHVDQUFBQSxpQkFBcUJZLElBQUksS0FBSTs0Q0FDckNDLFFBQVFiLFFBQVFhLE1BQU0sSUFBSTs0Q0FDMUJDLE9BQU9kLFFBQVFjLEtBQUssSUFBSWQsUUFBUWUsU0FBUyxJQUFJOzRDQUM3Q0MsV0FBV0M7NENBQ1hDLFNBQVNEO3dDQUNYOzs7NEJBQ0YsT0FBTztnQ0FDTHJCLFFBQVFWLEtBQUssQ0FDWCxzQkFDQUssV0FBVzRCLE1BQU0sRUFDakI1QixXQUFXNkIsVUFBVTs0QkFFekI7d0JBQ0YsRUFBRSxPQUFPQyxjQUFjOzRCQUNyQnpCLFFBQVFWLEtBQUssQ0FBQyx1QkFBdUJtQzt3QkFDdkM7d0JBRUEsZ0NBQWdDO3dCQUNoQyxJQUFJOzRCQUNGLE1BQU1DLFNBQVMsTUFBTTlCLE1BQ2xCOzRCQUdILElBQUk4QixPQUFPN0IsRUFBRSxFQUFFO2dDQUNiLE1BQU04QixVQUFVLE1BQU1ELE9BQU8zQixJQUFJO2dDQUNqQ0wsY0FBYyxNQUFNa0MsUUFBUUMsR0FBRyxDQUM3QixDQUFDRixRQUFRRyxTQUFTLElBQUksRUFBRSxFQUFFQyxLQUFLLENBQUMsR0FBRyxJQUFJNUIsR0FBRztpRkFBQyxPQUFPRTt3Q0FDaEQsSUFBSTs0Q0FDRixNQUFNMkIsU0FBUyxNQUFNcEMsTUFDbkIsb0VBQXVFLE9BQUhTOzRDQUV0RSxNQUFNNEIsVUFBVSxNQUFNRCxPQUFPakMsSUFBSTs0Q0FDakMsT0FBTztnREFDTE0sSUFBSSxPQUF3QixPQUFqQjRCLFFBQVFDLFFBQVE7Z0RBQzNCNUIsT0FBTzJCLFFBQVEzQixLQUFLLElBQUk7Z0RBQ3hCQyxPQUFPMEIsUUFBUUUsVUFBVSxJQUFJO2dEQUM3QjNCLEtBQUt5QixRQUFRRyxTQUFTO2dEQUN0QjNCLFFBQVE7Z0RBQ1JDLFVBQVV1QixRQUFRSSxpQkFBaUIsSUFBSUosUUFBUUssWUFBWSxJQUFJO2dEQUMvRHhCLFFBQVFtQixRQUFRTSxpQkFBaUIsSUFBSTtnREFDckN0QixRQUFRZ0IsUUFBUWhCLE1BQU0sSUFBSTtnREFDMUJDLE9BQU9lLFFBQVFPLFVBQVUsSUFBSTtnREFDN0I1QixhQUFhcUIsUUFBUVEsVUFBVSxJQUFJO2dEQUNuQ3JCLFdBQVdDO2dEQUNYQyxTQUFTRDs0Q0FDWDt3Q0FDRixFQUFFLFVBQU07NENBQ04sT0FBTzt3Q0FDVDtvQ0FDRjs7Z0NBRUYzQixjQUFjQSxZQUFZZ0QsTUFBTSxDQUFDQzs0QkFDbkM7d0JBQ0YsRUFBRSxPQUFPQyxVQUFVOzRCQUNqQjVDLFFBQVFWLEtBQUssQ0FBQyxtQkFBbUJzRDt3QkFDbkM7d0JBRUF6RCxlQUFlOytCQUFJTTsrQkFBb0JDO3lCQUFZO3dCQUVuRCxJQUFJRCxnQkFBZ0JvRCxNQUFNLEtBQUssS0FBS25ELFlBQVltRCxNQUFNLEtBQUssR0FBRzs0QkFDNUR0RCxTQUFTO3dCQUNYO29CQUNGLEVBQUUsT0FBT3VELEtBQVU7d0JBQ2pCdkQsU0FBU3VELElBQUlDLE9BQU8sSUFBSTtvQkFDMUIsU0FBVTt3QkFDUjFELFdBQVc7b0JBQ2I7Z0JBQ0Y7O1lBRUFHO1FBQ0Y7bUNBQUcsRUFBRTtJQUVMLE9BQU87UUFBRU47UUFBYUU7UUFBU0U7SUFBTTtBQUN2QyIsInNvdXJjZXMiOlsiL1VzZXJzL25pY2hvbGFzY2FubnkvRG9jdW1lbnRzL2V4aGliaXRpb24tY3VyYXRvci9zcmMvaG9va3MvdXNlRXhoaWJpdGlvbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgRXhoaWJpdGlvbiB9IGZyb20gXCIuLi90eXBlcy9pbmRleFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlRXhoaWJpdGlvbnMoKSB7XG4gIGNvbnN0IFtleGhpYml0aW9ucywgc2V0RXhoaWJpdGlvbnNdID0gdXNlU3RhdGU8RXhoaWJpdGlvbltdPihbXSk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZmV0Y2hFeGhpYml0aW9ucyA9IGFzeW5jICgpID0+IHtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICBzZXRFcnJvcihudWxsKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgbGV0IGhhcnZhcmRBcnR3b3JrczogRXhoaWJpdGlvbltdID0gW107XG4gICAgICAgIGxldCBtZXRBcnR3b3JrczogRXhoaWJpdGlvbltdID0gW107XG5cbiAgICAgICAgLy8gSGFydmFyZCBPQkpFQ1RTIEFQSSAoaW5kaXZpZHVhbCBhcnR3b3JrcylcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBoYXJ2YXJkUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgICBgaHR0cHM6Ly9hcGkuaGFydmFyZGFydG11c2V1bXMub3JnL29iamVjdD9zaXplPTEwJmhhc2ltYWdlPTEmYXBpa2V5PWE4YTUwOWRiLWFhYmQtNDJlYi04ZTlmLTNjNTE4ZDQxNTVhMGBcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgaWYgKGhhcnZhcmRSZXMub2spIHtcbiAgICAgICAgICAgIGNvbnN0IGhhcnZhcmREYXRhID0gYXdhaXQgaGFydmFyZFJlcy5qc29uKCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkhhcnZhcmQgQVBJIFJlc3BvbnNlOlwiLCBoYXJ2YXJkRGF0YSk7IC8vIERlYnVnIGxvZ1xuXG4gICAgICAgICAgICBoYXJ2YXJkQXJ0d29ya3MgPSAoaGFydmFyZERhdGEucmVjb3JkcyB8fCBbXSkubWFwKChhcnR3b3JrOiBhbnkpID0+ICh7XG4gICAgICAgICAgICAgIGlkOiBgaGFydmFyZC0ke2FydHdvcmsuaWR9YCxcbiAgICAgICAgICAgICAgdGl0bGU6IGFydHdvcmsudGl0bGUgfHwgXCJVbnRpdGxlZCBBcnR3b3JrXCIsXG4gICAgICAgICAgICAgIHZlbnVlOiBcIkhhcnZhcmQgQXJ0IE11c2V1bXNcIixcbiAgICAgICAgICAgICAgdXJsOiBhcnR3b3JrLnVybCB8fCBgaHR0cHM6Ly9oYXJ2YXJkYXJ0bXVzZXVtcy5vcmcvY29sbGVjdGlvbnMvb2JqZWN0LyR7YXJ0d29yay5pZH1gLFxuICAgICAgICAgICAgICBzb3VyY2U6IFwiSGFydmFyZFwiLFxuICAgICAgICAgICAgICBpbWFnZVVybDogYXJ0d29yay5wcmltYXJ5aW1hZ2V1cmwgfHwgbnVsbCxcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGFydHdvcmsuZGVzY3JpcHRpb24gfHwgYXJ0d29yay5sYWJlbHRleHQgfHwgXCJObyBkZXNjcmlwdGlvbiBhdmFpbGFibGVcIixcbiAgICAgICAgICAgICAgYXJ0aXN0OiBhcnR3b3JrLnBlb3BsZT8uWzBdPy5uYW1lIHx8IFwiVW5rbm93biBBcnRpc3RcIixcbiAgICAgICAgICAgICAgbWVkaXVtOiBhcnR3b3JrLm1lZGl1bSB8fCBcIlVua25vd24gTWVkaXVtXCIsXG4gICAgICAgICAgICAgIGRhdGVkOiBhcnR3b3JrLmRhdGVkIHx8IGFydHdvcmsuZGF0ZWJlZ2luIHx8IFwiVW5rbm93biBEYXRlXCIsXG4gICAgICAgICAgICAgIGJlZ2luZGF0ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICBlbmRkYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICAgIFwiSGFydmFyZCBBUEkgRXJyb3I6XCIsXG4gICAgICAgICAgICAgIGhhcnZhcmRSZXMuc3RhdHVzLFxuICAgICAgICAgICAgICBoYXJ2YXJkUmVzLnN0YXR1c1RleHRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChoYXJ2YXJkRXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiSGFydmFyZCBBUEkgZmFpbGVkOlwiLCBoYXJ2YXJkRXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTWV0IEFQSSAoaW5kaXZpZHVhbCBhcnR3b3JrcylcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBtZXRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgIGBodHRwczovL2NvbGxlY3Rpb25hcGkubWV0bXVzZXVtLm9yZy9wdWJsaWMvY29sbGVjdGlvbi92MS9zZWFyY2g/aGFzSW1hZ2VzPXRydWUmcT1wYWludGluZ2BcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgaWYgKG1ldFJlcy5vaykge1xuICAgICAgICAgICAgY29uc3QgbWV0RGF0YSA9IGF3YWl0IG1ldFJlcy5qc29uKCk7XG4gICAgICAgICAgICBtZXRBcnR3b3JrcyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICAgICAgICAobWV0RGF0YS5vYmplY3RJRHMgfHwgW10pLnNsaWNlKDAsIDEwKS5tYXAoYXN5bmMgKGlkOiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgY29uc3Qgb2JqUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgICAgICAgICAgIGBodHRwczovL2NvbGxlY3Rpb25hcGkubWV0bXVzZXVtLm9yZy9wdWJsaWMvY29sbGVjdGlvbi92MS9vYmplY3RzLyR7aWR9YFxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IG9iakRhdGEgPSBhd2FpdCBvYmpSZXMuanNvbigpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGBtZXQtJHtvYmpEYXRhLm9iamVjdElEfWAsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBvYmpEYXRhLnRpdGxlIHx8IFwiVW50aXRsZWRcIixcbiAgICAgICAgICAgICAgICAgICAgdmVudWU6IG9iakRhdGEucmVwb3NpdG9yeSB8fCBcIlRoZSBNZXRcIixcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBvYmpEYXRhLm9iamVjdFVSTCxcbiAgICAgICAgICAgICAgICAgICAgc291cmNlOiBcIlRoZSBNZXRcIixcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VVcmw6IG9iakRhdGEucHJpbWFyeUltYWdlU21hbGwgfHwgb2JqRGF0YS5wcmltYXJ5SW1hZ2UgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgYXJ0aXN0OiBvYmpEYXRhLmFydGlzdERpc3BsYXlOYW1lIHx8IFwiVW5rbm93biBBcnRpc3RcIixcbiAgICAgICAgICAgICAgICAgICAgbWVkaXVtOiBvYmpEYXRhLm1lZGl1bSB8fCBcIlVua25vd24gTWVkaXVtXCIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGVkOiBvYmpEYXRhLm9iamVjdERhdGUgfHwgXCJVbmtub3duIERhdGVcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG9iakRhdGEuY3JlZGl0TGluZSB8fCBcIk5vIGRlc2NyaXB0aW9uIGF2YWlsYWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICBiZWdpbmRhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgZW5kZGF0ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBtZXRBcnR3b3JrcyA9IG1ldEFydHdvcmtzLmZpbHRlcihCb29sZWFuKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKG1ldEVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIk1ldCBBUEkgZmFpbGVkOlwiLCBtZXRFcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRFeGhpYml0aW9ucyhbLi4uaGFydmFyZEFydHdvcmtzLCAuLi5tZXRBcnR3b3Jrc10pO1xuXG4gICAgICAgIGlmIChoYXJ2YXJkQXJ0d29ya3MubGVuZ3RoID09PSAwICYmIG1ldEFydHdvcmtzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHNldEVycm9yKFwiVW5hYmxlIHRvIGZldGNoIGFydHdvcmtzIGZyb20gZWl0aGVyIG11c2V1bSBBUElcIik7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAgIHNldEVycm9yKGVyci5tZXNzYWdlIHx8IFwiRmFpbGVkIHRvIGZldGNoIGFydHdvcmtzXCIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZldGNoRXhoaWJpdGlvbnMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiB7IGV4aGliaXRpb25zLCBsb2FkaW5nLCBlcnJvciB9O1xufVxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlRXhoaWJpdGlvbnMiLCJleGhpYml0aW9ucyIsInNldEV4aGliaXRpb25zIiwibG9hZGluZyIsInNldExvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiZmV0Y2hFeGhpYml0aW9ucyIsImhhcnZhcmRBcnR3b3JrcyIsIm1ldEFydHdvcmtzIiwiaGFydmFyZFJlcyIsImZldGNoIiwib2siLCJoYXJ2YXJkRGF0YSIsImpzb24iLCJjb25zb2xlIiwibG9nIiwicmVjb3JkcyIsIm1hcCIsImFydHdvcmsiLCJpZCIsInRpdGxlIiwidmVudWUiLCJ1cmwiLCJzb3VyY2UiLCJpbWFnZVVybCIsInByaW1hcnlpbWFnZXVybCIsImRlc2NyaXB0aW9uIiwibGFiZWx0ZXh0IiwiYXJ0aXN0IiwicGVvcGxlIiwibmFtZSIsIm1lZGl1bSIsImRhdGVkIiwiZGF0ZWJlZ2luIiwiYmVnaW5kYXRlIiwidW5kZWZpbmVkIiwiZW5kZGF0ZSIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJoYXJ2YXJkRXJyb3IiLCJtZXRSZXMiLCJtZXREYXRhIiwiUHJvbWlzZSIsImFsbCIsIm9iamVjdElEcyIsInNsaWNlIiwib2JqUmVzIiwib2JqRGF0YSIsIm9iamVjdElEIiwicmVwb3NpdG9yeSIsIm9iamVjdFVSTCIsInByaW1hcnlJbWFnZVNtYWxsIiwicHJpbWFyeUltYWdlIiwiYXJ0aXN0RGlzcGxheU5hbWUiLCJvYmplY3REYXRlIiwiY3JlZGl0TGluZSIsImZpbHRlciIsIkJvb2xlYW4iLCJtZXRFcnJvciIsImxlbmd0aCIsImVyciIsIm1lc3NhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useExhibitions.ts\n"));

/***/ })

});