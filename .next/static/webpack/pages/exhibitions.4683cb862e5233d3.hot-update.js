"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/exhibitions",{

/***/ "(pages-dir-browser)/./src/hooks/useExhibitions.ts":
/*!*************************************!*\
  !*** ./src/hooks/useExhibitions.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExhibitions: () => (/* binding */ useExhibitions)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useExhibitions() {\n    const [exhibitions, setExhibitions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useExhibitions.useEffect\": ()=>{\n            const fetchExhibitions = {\n                \"useExhibitions.useEffect.fetchExhibitions\": async ()=>{\n                    setLoading(true);\n                    setError(null);\n                    try {\n                        // --- Harvard API ---\n                        const harvardRes = await fetch(\"https://api.harvardartmuseums.org/exhibition?apikey=a8a509db-aabd-42eb-8e9f-3c518d4155a0\");\n                        if (!harvardRes.ok) throw new Error(\"Failed to fetch Harvard exhibitions\");\n                        const harvardData = await harvardRes.json();\n                        const harvardExhibitions = await Promise.all((harvardData.records || []).map({\n                            \"useExhibitions.useEffect.fetchExhibitions\": async (ex)=>{\n                                let imageUrl, artist, medium, dated;\n                                try {\n                                    const artRes = await fetch(\"https://api.harvardartmuseums.org/object?exhibition=\".concat(ex.id, \"&size=1&apikey=a8a509db-aabd-42eb-8e9f-3c518d4155a0\"));\n                                    if (artRes.ok) {\n                                        const artData = await artRes.json();\n                                        if (artData.records && artData.records[0]) {\n                                            const art = artData.records[0];\n                                            imageUrl = art.primaryimageurl;\n                                            artist = art.people && art.people[0] ? art.people[0].name : undefined;\n                                            medium = art.medium;\n                                            dated = art.dated;\n                                        }\n                                    }\n                                } catch (e) {\n                                    imageUrl = undefined;\n                                }\n                                return {\n                                    id: \"harvard-\".concat(ex.id),\n                                    title: ex.title || \"Untitled Exhibition\",\n                                    venue: ex.venue || \"Harvard Art Museums\",\n                                    url: ex.url || \"https://harvardartmuseums.org/visit/exhibitions\",\n                                    source: \"Harvard\",\n                                    imageUrl,\n                                    description: ex.description,\n                                    begindate: ex.begindate,\n                                    enddate: ex.enddate,\n                                    artist,\n                                    medium,\n                                    dated\n                                };\n                            }\n                        }[\"useExhibitions.useEffect.fetchExhibitions\"]));\n                        // --- The Met API ---\n                        const metRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=exhibition\");\n                        if (!metRes.ok) throw new Error(\"Failed to fetch Met exhibitions\");\n                        const metData = await metRes.json();\n                        const metExhibitions = await Promise.all((metData.objectIDs || []).slice(0, 5).map({\n                            \"useExhibitions.useEffect.fetchExhibitions\": async (id)=>{\n                                const objRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\".concat(id));\n                                const objData = await objRes.json();\n                                return {\n                                    id: \"met-\".concat(objData.objectID),\n                                    title: objData.title || \"Untitled\",\n                                    venue: objData.repository || \"The Met\",\n                                    url: objData.objectURL,\n                                    source: \"The Met\",\n                                    imageUrl: objData.primaryImageSmall || objData.primaryImage,\n                                    artist: objData.artistDisplayName,\n                                    medium: objData.medium,\n                                    dated: objData.objectDate,\n                                    description: objData.creditLine,\n                                    begindate: undefined,\n                                    enddate: undefined\n                                };\n                            }\n                        }[\"useExhibitions.useEffect.fetchExhibitions\"]));\n                        // --- Smithsonian API ---\n                        const smithRes = await fetch(\"https://api.si.edu/openaccess/api/v1.0/search?q=exhibition&api_key=YOUR_SMITHSONIAN_API_KEY\");\n                        let smithExhibitions = [];\n                        if (smithRes.ok) {\n                            const smithData = await smithRes.json();\n                            smithExhibitions = (smithData.response.rows || []).map({\n                                \"useExhibitions.useEffect.fetchExhibitions\": (ex)=>{\n                                    var _ex_content_descriptiveNonRepeating_free_text, _ex_content_descriptiveNonRepeating, _ex_content_media__content_descriptiveNonRepeating_online_media_media_, _ex_content_media__content_descriptiveNonRepeating_online_media_media, _ex_content_media__content_descriptiveNonRepeating_online_media, _ex_content_media__content_descriptiveNonRepeating, _ex_content_media__content, _ex_content_media_, _ex_content_media, _ex_content_freetext_notes__content_, _ex_content_freetext_notes__content, _ex_content_freetext_notes_, _ex_content_freetext_notes, _ex_content_freetext;\n                                    return {\n                                        id: \"smithsonian-\".concat(ex.id),\n                                        title: ex.title || \"Untitled Exhibition\",\n                                        venue: ex.unit || \"Smithsonian\",\n                                        url: ((_ex_content_descriptiveNonRepeating = ex.content.descriptiveNonRepeating) === null || _ex_content_descriptiveNonRepeating === void 0 ? void 0 : (_ex_content_descriptiveNonRepeating_free_text = _ex_content_descriptiveNonRepeating.free_text) === null || _ex_content_descriptiveNonRepeating_free_text === void 0 ? void 0 : _ex_content_descriptiveNonRepeating_free_text[0]) || \"https://www.si.edu\",\n                                        source: \"Smithsonian\",\n                                        imageUrl: ((_ex_content_media = ex.content.media) === null || _ex_content_media === void 0 ? void 0 : (_ex_content_media_ = _ex_content_media[0]) === null || _ex_content_media_ === void 0 ? void 0 : (_ex_content_media__content = _ex_content_media_.content) === null || _ex_content_media__content === void 0 ? void 0 : (_ex_content_media__content_descriptiveNonRepeating = _ex_content_media__content.descriptiveNonRepeating) === null || _ex_content_media__content_descriptiveNonRepeating === void 0 ? void 0 : (_ex_content_media__content_descriptiveNonRepeating_online_media = _ex_content_media__content_descriptiveNonRepeating.online_media) === null || _ex_content_media__content_descriptiveNonRepeating_online_media === void 0 ? void 0 : (_ex_content_media__content_descriptiveNonRepeating_online_media_media = _ex_content_media__content_descriptiveNonRepeating_online_media.media) === null || _ex_content_media__content_descriptiveNonRepeating_online_media_media === void 0 ? void 0 : (_ex_content_media__content_descriptiveNonRepeating_online_media_media_ = _ex_content_media__content_descriptiveNonRepeating_online_media_media[0]) === null || _ex_content_media__content_descriptiveNonRepeating_online_media_media_ === void 0 ? void 0 : _ex_content_media__content_descriptiveNonRepeating_online_media_media_.content) || undefined,\n                                        description: ((_ex_content_freetext = ex.content.freetext) === null || _ex_content_freetext === void 0 ? void 0 : (_ex_content_freetext_notes = _ex_content_freetext.notes) === null || _ex_content_freetext_notes === void 0 ? void 0 : (_ex_content_freetext_notes_ = _ex_content_freetext_notes[0]) === null || _ex_content_freetext_notes_ === void 0 ? void 0 : (_ex_content_freetext_notes__content = _ex_content_freetext_notes_.content) === null || _ex_content_freetext_notes__content === void 0 ? void 0 : (_ex_content_freetext_notes__content_ = _ex_content_freetext_notes__content[0]) === null || _ex_content_freetext_notes__content_ === void 0 ? void 0 : _ex_content_freetext_notes__content_.content) || undefined,\n                                        begindate: undefined,\n                                        enddate: undefined,\n                                        artist: undefined,\n                                        medium: undefined,\n                                        dated: undefined\n                                    };\n                                }\n                            }[\"useExhibitions.useEffect.fetchExhibitions\"]);\n                        }\n                        setExhibitions([\n                            ...harvardExhibitions,\n                            ...metExhibitions,\n                            ...smithExhibitions\n                        ]);\n                    } catch (err) {\n                        setError(err.message || \"Failed to fetch exhibitions\");\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useExhibitions.useEffect.fetchExhibitions\"];\n            fetchExhibitions();\n        }\n    }[\"useExhibitions.useEffect\"], []);\n    return {\n        exhibitions,\n        loading,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFHckMsU0FBU0U7SUFDZCxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0gsK0NBQVFBLENBQWUsRUFBRTtJQUMvRCxNQUFNLENBQUNJLFNBQVNDLFdBQVcsR0FBR0wsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDTSxPQUFPQyxTQUFTLEdBQUdQLCtDQUFRQSxDQUFnQjtJQUVsREQsZ0RBQVNBO29DQUFDO1lBQ1IsTUFBTVM7NkRBQW1CO29CQUN2QkgsV0FBVztvQkFDWEUsU0FBUztvQkFFVCxJQUFJO3dCQUNGLHNCQUFzQjt3QkFDdEIsTUFBTUUsYUFBYSxNQUFNQyxNQUN0Qjt3QkFFSCxJQUFJLENBQUNELFdBQVdFLEVBQUUsRUFDaEIsTUFBTSxJQUFJQyxNQUFNO3dCQUNsQixNQUFNQyxjQUFjLE1BQU1KLFdBQVdLLElBQUk7d0JBQ3pDLE1BQU1DLHFCQUFxQixNQUFNQyxRQUFRQyxHQUFHLENBQzFDLENBQUNKLFlBQVlLLE9BQU8sSUFBSSxFQUFFLEVBQUVDLEdBQUc7eUVBQUMsT0FBT0M7Z0NBQ3JDLElBQUlDLFVBQVVDLFFBQVFDLFFBQVFDO2dDQUM5QixJQUFJO29DQUNGLE1BQU1DLFNBQVMsTUFBTWYsTUFDbkIsdURBQTZELE9BQU5VLEdBQUdNLEVBQUUsRUFBQztvQ0FFL0QsSUFBSUQsT0FBT2QsRUFBRSxFQUFFO3dDQUNiLE1BQU1nQixVQUFVLE1BQU1GLE9BQU9YLElBQUk7d0NBQ2pDLElBQUlhLFFBQVFULE9BQU8sSUFBSVMsUUFBUVQsT0FBTyxDQUFDLEVBQUUsRUFBRTs0Q0FDekMsTUFBTVUsTUFBTUQsUUFBUVQsT0FBTyxDQUFDLEVBQUU7NENBQzlCRyxXQUFXTyxJQUFJQyxlQUFlOzRDQUM5QlAsU0FDRU0sSUFBSUUsTUFBTSxJQUFJRixJQUFJRSxNQUFNLENBQUMsRUFBRSxHQUN2QkYsSUFBSUUsTUFB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MEVBQUFBLGtFQUFBQSxtREFDSTZDLFlBQVksY0FEaEI3Qyx1RkFBQUEsd0VBQUFBLGdFQUNrQjRDLEtBQUssY0FEdkI1Qyw2RkFBQUEseUVBQUFBLHFFQUN5QixDQUFDLEVBQUUsY0FENUJBLDZGQUFBQSx1RUFDOEJ5QyxPQUFPLEtBQUk3Qjt3Q0FDM0NLLGFBQ0VqQixFQUFBQSx1QkFBQUEsR0FBR3lDLE9BQU8sQ0FBQ0ssUUFBUSxjQUFuQjlDLDRDQUFBQSw2QkFBQUEscUJBQXFCK0MsS0FBSyxjQUExQi9DLGtEQUFBQSw4QkFBQUEsMEJBQTRCLENBQUMsRUFBRSxjQUEvQkEsbURBQUFBLHNDQUFBQSw0QkFBaUN5QyxPQUFPLGNBQXhDekMsMkRBQUFBLHVDQUFBQSxtQ0FBMEMsQ0FBQyxFQUFFLGNBQTdDQSwyREFBQUEscUNBQStDeUMsT0FBTyxLQUN0RDdCO3dDQUNGTSxXQUFXTjt3Q0FDWE8sU0FBU1A7d0NBQ1RWLFFBQVFVO3dDQUNSVCxRQUFRUzt3Q0FDUlIsT0FBT1E7b0NBQ1Q7Ozt3QkFDRjt3QkFFQTdCLGVBQWU7K0JBQ1ZZOytCQUNBMkI7K0JBQ0FjO3lCQUNKO29CQUNILEVBQUUsT0FBT1ksS0FBVTt3QkFDakI3RCxTQUFTNkQsSUFBSUMsT0FBTyxJQUFJO29CQUMxQixTQUFVO3dCQUNSaEUsV0FBVztvQkFDYjtnQkFDRjs7WUFFQUc7UUFDRjttQ0FBRyxFQUFFO0lBRUwsT0FBTztRQUFFTjtRQUFhRTtRQUFTRTtJQUFNO0FBQ3ZDIiwic291cmNlcyI6WyIvVXNlcnMvbmljaG9sYXNjYW5ueS9Eb2N1bWVudHMvZXhoaWJpdGlvbi1jdXJhdG9yL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBFeGhpYml0aW9uIH0gZnJvbSBcIi4uL3R5cGVzL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VFeGhpYml0aW9ucygpIHtcbiAgY29uc3QgW2V4aGliaXRpb25zLCBzZXRFeGhpYml0aW9uc10gPSB1c2VTdGF0ZTxFeGhpYml0aW9uW10+KFtdKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBmZXRjaEV4aGliaXRpb25zID0gYXN5bmMgKCkgPT4ge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyAtLS0gSGFydmFyZCBBUEkgLS0tXG4gICAgICAgIGNvbnN0IGhhcnZhcmRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICBgaHR0cHM6Ly9hcGkuaGFydmFyZGFydG11c2V1bXMub3JnL2V4aGliaXRpb24/YXBpa2V5PWE4YTUwOWRiLWFhYmQtNDJlYi04ZTlmLTNjNTE4ZDQxNTVhMGBcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKCFoYXJ2YXJkUmVzLm9rKVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBIYXJ2YXJkIGV4aGliaXRpb25zXCIpO1xuICAgICAgICBjb25zdCBoYXJ2YXJkRGF0YSA9IGF3YWl0IGhhcnZhcmRSZXMuanNvbigpO1xuICAgICAgICBjb25zdCBoYXJ2YXJkRXhoaWJpdGlvbnMgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgICAgICAoaGFydmFyZERhdGEucmVjb3JkcyB8fCBbXSkubWFwKGFzeW5jIChleDogYW55KSA9PiB7XG4gICAgICAgICAgICBsZXQgaW1hZ2VVcmwsIGFydGlzdCwgbWVkaXVtLCBkYXRlZDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGNvbnN0IGFydFJlcyA9IGF3YWl0IGZldGNoKFxuICAgICAgICAgICAgICAgIGBodHRwczovL2FwaS5oYXJ2YXJkYXJ0bXVzZXVtcy5vcmcvb2JqZWN0P2V4aGliaXRpb249JHtleC5pZH0mc2l6ZT0xJmFwaWtleT1hOGE1MDlkYi1hYWJkLTQyZWItOGU5Zi0zYzUxOGQ0MTU1YTBgXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIGlmIChhcnRSZXMub2spIHtcbiAgICAgICAgICAgICAgICBjb25zdCBhcnREYXRhID0gYXdhaXQgYXJ0UmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICBpZiAoYXJ0RGF0YS5yZWNvcmRzICYmIGFydERhdGEucmVjb3Jkc1swXSkge1xuICAgICAgICAgICAgICAgICAgY29uc3QgYXJ0ID0gYXJ0RGF0YS5yZWNvcmRzWzBdO1xuICAgICAgICAgICAgICAgICAgaW1hZ2VVcmwgPSBhcnQucHJpbWFyeWltYWdldXJsO1xuICAgICAgICAgICAgICAgICAgYXJ0aXN0ID1cbiAgICAgICAgICAgICAgICAgICAgYXJ0LnBlb3BsZSAmJiBhcnQucGVvcGxlWzBdXG4gICAgICAgICAgICAgICAgICAgICAgPyBhcnQucGVvcGxlWzBdLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgIG1lZGl1bSA9IGFydC5tZWRpdW07XG4gICAgICAgICAgICAgICAgICBkYXRlZCA9IGFydC5kYXRlZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICBpbWFnZVVybCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIGlkOiBgaGFydmFyZC0ke2V4LmlkfWAsXG4gICAgICAgICAgICAgIHRpdGxlOiBleC50aXRsZSB8fCBcIlVudGl0bGVkIEV4aGliaXRpb25cIixcbiAgICAgICAgICAgICAgdmVudWU6IGV4LnZlbnVlIHx8IFwiSGFydmFyZCBBcnQgTXVzZXVtc1wiLFxuICAgICAgICAgICAgICB1cmw6IGV4LnVybCB8fCBcImh0dHBzOi8vaGFydmFyZGFydG11c2V1bXMub3JnL3Zpc2l0L2V4aGliaXRpb25zXCIsXG4gICAgICAgICAgICAgIHNvdXJjZTogXCJIYXJ2YXJkXCIsXG4gICAgICAgICAgICAgIGltYWdlVXJsLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZXguZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgIGJlZ2luZGF0ZTogZXguYmVnaW5kYXRlLFxuICAgICAgICAgICAgICBlbmRkYXRlOiBleC5lbmRkYXRlLFxuICAgICAgICAgICAgICBhcnRpc3QsXG4gICAgICAgICAgICAgIG1lZGl1bSxcbiAgICAgICAgICAgICAgZGF0ZWQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gLS0tIFRoZSBNZXQgQVBJIC0tLVxuICAgICAgICBjb25zdCBtZXRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICBgaHR0cHM6Ly9jb2xsZWN0aW9uYXBpLm1ldG11c2V1bS5vcmcvcHVibGljL2NvbGxlY3Rpb24vdjEvc2VhcmNoP2hhc0ltYWdlcz10cnVlJnE9ZXhoaWJpdGlvbmBcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKCFtZXRSZXMub2spIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBNZXQgZXhoaWJpdGlvbnNcIik7XG4gICAgICAgIGNvbnN0IG1ldERhdGEgPSBhd2FpdCBtZXRSZXMuanNvbigpO1xuICAgICAgICBjb25zdCBtZXRFeGhpYml0aW9ucyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICAgIChtZXREYXRhLm9iamVjdElEcyB8fCBbXSkuc2xpY2UoMCwgNSkubWFwKGFzeW5jIChpZDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBvYmpSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgICAgYGh0dHBzOi8vY29sbGVjdGlvbmFwaS5tZXRtdXNldW0ub3JnL3B1YmxpYy9jb2xsZWN0aW9uL3YxL29iamVjdHMvJHtpZH1gXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY29uc3Qgb2JqRGF0YSA9IGF3YWl0IG9ialJlcy5qc29uKCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICBpZDogYG1ldC0ke29iakRhdGEub2JqZWN0SUR9YCxcbiAgICAgICAgICAgICAgdGl0bGU6IG9iakRhdGEudGl0bGUgfHwgXCJVbnRpdGxlZFwiLFxuICAgICAgICAgICAgICB2ZW51ZTogb2JqRGF0YS5yZXBvc2l0b3J5IHx8IFwiVGhlIE1ldFwiLFxuICAgICAgICAgICAgICB1cmw6IG9iakRhdGEub2JqZWN0VVJMLFxuICAgICAgICAgICAgICBzb3VyY2U6IFwiVGhlIE1ldFwiLFxuICAgICAgICAgICAgICBpbWFnZVVybDogb2JqRGF0YS5wcmltYXJ5SW1hZ2VTbWFsbCB8fCBvYmpEYXRhLnByaW1hcnlJbWFnZSxcbiAgICAgICAgICAgICAgYXJ0aXN0OiBvYmpEYXRhLmFydGlzdERpc3BsYXlOYW1lLFxuICAgICAgICAgICAgICBtZWRpdW06IG9iakRhdGEubWVkaXVtLFxuICAgICAgICAgICAgICBkYXRlZDogb2JqRGF0YS5vYmplY3REYXRlLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogb2JqRGF0YS5jcmVkaXRMaW5lLFxuICAgICAgICAgICAgICBiZWdpbmRhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgZW5kZGF0ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIC0tLSBTbWl0aHNvbmlhbiBBUEkgLS0tXG4gICAgICAgIGNvbnN0IHNtaXRoUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgYGh0dHBzOi8vYXBpLnNpLmVkdS9vcGVuYWNjZXNzL2FwaS92MS4wL3NlYXJjaD9xPWV4aGliaXRpb24mYXBpX2tleT1ZT1VSX1NNSVRIU09OSUFOX0FQSV9LRVlgXG4gICAgICAgICk7XG4gICAgICAgIGxldCBzbWl0aEV4aGliaXRpb25zOiBFeGhpYml0aW9uW10gPSBbXTtcbiAgICAgICAgaWYgKHNtaXRoUmVzLm9rKSB7XG4gICAgICAgICAgY29uc3Qgc21pdGhEYXRhID0gYXdhaXQgc21pdGhSZXMuanNvbigpO1xuICAgICAgICAgIHNtaXRoRXhoaWJpdGlvbnMgPSAoc21pdGhEYXRhLnJlc3BvbnNlLnJvd3MgfHwgW10pLm1hcCgoZXg6IGFueSkgPT4gKHtcbiAgICAgICAgICAgIGlkOiBgc21pdGhzb25pYW4tJHtleC5pZH1gLFxuICAgICAgICAgICAgdGl0bGU6IGV4LnRpdGxlIHx8IFwiVW50aXRsZWQgRXhoaWJpdGlvblwiLFxuICAgICAgICAgICAgdmVudWU6IGV4LnVuaXQgfHwgXCJTbWl0aHNvbmlhblwiLFxuICAgICAgICAgICAgdXJsOlxuICAgICAgICAgICAgICBleC5jb250ZW50LmRlc2NyaXB0aXZlTm9uUmVwZWF0aW5nPy5mcmVlX3RleHQ/LlswXSB8fFxuICAgICAgICAgICAgICBcImh0dHBzOi8vd3d3LnNpLmVkdVwiLFxuICAgICAgICAgICAgc291cmNlOiBcIlNtaXRoc29uaWFuXCIsXG4gICAgICAgICAgICBpbWFnZVVybDpcbiAgICAgICAgICAgICAgZXguY29udGVudC5tZWRpYT8uWzBdPy5jb250ZW50Py5kZXNjcmlwdGl2ZU5vblJlcGVhdGluZ1xuICAgICAgICAgICAgICAgID8ub25saW5lX21lZGlhPy5tZWRpYT8uWzBdPy5jb250ZW50IHx8IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICBleC5jb250ZW50LmZyZWV0ZXh0Py5ub3Rlcz8uWzBdPy5jb250ZW50Py5bMF0/LmNvbnRlbnQgfHxcbiAgICAgICAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAgICAgYmVnaW5kYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBlbmRkYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBhcnRpc3Q6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1lZGl1bTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgZGF0ZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRFeGhpYml0aW9ucyhbXG4gICAgICAgICAgLi4uaGFydmFyZEV4aGliaXRpb25zLFxuICAgICAgICAgIC4uLm1ldEV4aGliaXRpb25zLFxuICAgICAgICAgIC4uLnNtaXRoRXhoaWJpdGlvbnMsXG4gICAgICAgIF0pO1xuICAgICAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICAgICAgc2V0RXJyb3IoZXJyLm1lc3NhZ2UgfHwgXCJGYWlsZWQgdG8gZmV0Y2ggZXhoaWJpdGlvbnNcIik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZmV0Y2hFeGhpYml0aW9ucygpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIHsgZXhoaWJpdGlvbnMsIGxvYWRpbmcsIGVycm9yIH07XG59XG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VFeGhpYml0aW9ucyIsImV4aGliaXRpb25zIiwic2V0RXhoaWJpdGlvbnMiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJmZXRjaEV4aGliaXRpb25zIiwiaGFydmFyZFJlcyIsImZldGNoIiwib2siLCJFcnJvciIsImhhcnZhcmREYXRhIiwianNvbiIsImhhcnZhcmRFeGhpYml0aW9ucyIsIlByb21pc2UiLCJhbGwiLCJyZWNvcmRzIiwibWFwIiwiZXgiLCJpbWFnZVVybCIsImFydGlzdCIsIm1lZGl1bSIsImRhdGVkIiwiYXJ0UmVzIiwiaWQiLCJhcnREYXRhIiwiYXJ0IiwicHJpbWFyeWltYWdldXJsIiwicGVvcGxlIiwibmFtZSIsInVuZGVmaW5lZCIsInRpdGxlIiwidmVudWUiLCJ1cmwiLCJzb3VyY2UiLCJkZXNjcmlwdGlvbiIsImJlZ2luZGF0ZSIsImVuZGRhdGUiLCJtZXRSZXMiLCJtZXREYXRhIiwibWV0RXhoaWJpdGlvbnMiLCJvYmplY3RJRHMiLCJzbGljZSIsIm9ialJlcyIsIm9iakRhdGEiLCJvYmplY3RJRCIsInJlcG9zaXRvcnkiLCJvYmplY3RVUkwiLCJwcmltYXJ5SW1hZ2VTbWFsbCIsInByaW1hcnlJbWFnZSIsImFydGlzdERpc3BsYXlOYW1lIiwib2JqZWN0RGF0ZSIsImNyZWRpdExpbmUiLCJzbWl0aFJlcyIsInNtaXRoRXhoaWJpdGlvbnMiLCJzbWl0aERhdGEiLCJyZXNwb25zZSIsInJvd3MiLCJ1bml0IiwiY29udGVudCIsImRlc2NyaXB0aXZlTm9uUmVwZWF0aW5nIiwiZnJlZV90ZXh0IiwibWVkaWEiLCJvbmxpbmVfbWVkaWEiLCJmcmVldGV4dCIsIm5vdGVzIiwiZXJyIiwibWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useExhibitions.ts\n"));

/***/ })

});