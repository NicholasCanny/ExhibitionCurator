"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/exhibitions",{

/***/ "(pages-dir-browser)/./src/hooks/useExhibitions.ts":
/*!*************************************!*\
  !*** ./src/hooks/useExhibitions.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExhibitions: () => (/* binding */ useExhibitions)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useExhibitions() {\n    const [exhibitions, setExhibitions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useExhibitions.useEffect\": ()=>{\n            const fetchExhibitions = {\n                \"useExhibitions.useEffect.fetchExhibitions\": async ()=>{\n                    setLoading(true);\n                    setError(null);\n                    try {\n                        let harvardArtworks = [];\n                        let metArtworks = [];\n                        // Harvard OBJECTS API (individual artworks)\n                        try {\n                            const harvardRes = await fetch(\"https://api.harvardartmuseums.org/object?size=50&hasimage=1&apikey=a8a509db-aabd-42eb-8e9f-3c518d4155a0\");\n                            if (harvardRes.ok) {\n                                const harvardData = await harvardRes.json();\n                                harvardArtworks = (harvardData.records || []).filter({\n                                    \"useExhibitions.useEffect.fetchExhibitions\": (artwork)=>artwork.primaryimageurl\n                                }[\"useExhibitions.useEffect.fetchExhibitions\"]).slice(0, 25).map({\n                                    \"useExhibitions.useEffect.fetchExhibitions\": (artwork)=>{\n                                        var _artwork_people_, _artwork_people;\n                                        return {\n                                            id: \"harvard-\".concat(artwork.id),\n                                            title: artwork.title || \"Untitled Artwork\",\n                                            venue: \"Harvard Art Museums\",\n                                            url: artwork.url || \"https://harvardartmuseums.org/collections/object/\".concat(artwork.id),\n                                            source: \"Harvard\",\n                                            imageUrl: artwork.primaryimageurl,\n                                            description: artwork.description || artwork.labeltext || \"No description available\",\n                                            artist: ((_artwork_people = artwork.people) === null || _artwork_people === void 0 ? void 0 : (_artwork_people_ = _artwork_people[0]) === null || _artwork_people_ === void 0 ? void 0 : _artwork_people_.name) || \"Unknown Artist\",\n                                            medium: artwork.technique || artwork.medium || \"Unknown Medium\",\n                                            dated: artwork.dated || artwork.datebegin || \"Unknown Date\",\n                                            department: artwork.classification,\n                                            dimensions: artwork.dimensions,\n                                            culture: artwork.culture,\n                                            period: artwork.period,\n                                            begindate: undefined,\n                                            enddate: undefined\n                                        };\n                                    }\n                                }[\"useExhibitions.useEffect.fetchExhibitions\"]);\n                            } else {\n                                console.error(\"Harvard API Error:\", harvardRes.status, harvardRes.statusText);\n                            }\n                        } catch (harvardError) {\n                            console.error(\"Harvard API failed:\", harvardError);\n                        }\n                        // Met API (individual artworks) - faster approach\n                        try {\n                            const metRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=painting\");\n                            if (metRes.ok) {\n                                const metData = await metRes.json();\n                                const objectIds = (metData.objectIDs || []).slice(0, 15);\n                                const objectPromises = objectIds.map({\n                                    \"useExhibitions.useEffect.fetchExhibitions.objectPromises\": async (id)=>{\n                                        try {\n                                            const objRes = await fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\".concat(id));\n                                            if (objRes.ok) {\n                                                const objData = await objRes.json();\n                                                const imageUrl = objData.primaryImageSmall || objData.primaryImage;\n                                                if (imageUrl && imageUrl.trim() !== \"\") {\n                                                    return {\n                                                        id: \"met-\".concat(objData.objectID),\n                                                        title: objData.title || \"Untitled\",\n                                                        venue: objData.repository || \"The Met\",\n                                                        url: objData.objectURL,\n                                                        source: \"The Met\",\n                                                        imageUrl: imageUrl,\n                                                        artist: objData.artistDisplayName || \"Unknown Artist\",\n                                                        medium: objData.medium || \"Unknown Medium\",\n                                                        dated: objData.objectDate || \"Unknown Date\",\n                                                        description: objData.creditLine || \"No description available\",\n                                                        department: objData.department,\n                                                        dimensions: objData.dimensions,\n                                                        culture: objData.culture,\n                                                        period: objData.period,\n                                                        begindate: undefined,\n                                                        enddate: undefined\n                                                    };\n                                                }\n                                            }\n                                            return null;\n                                        } catch (e) {\n                                            return null;\n                                        }\n                                    }\n                                }[\"useExhibitions.useEffect.fetchExhibitions.objectPromises\"]);\n                                const results = await Promise.all(objectPromises);\n                                metArtworks = results.filter(Boolean).slice(0, 10);\n                            }\n                        } catch (metError) {\n                            console.error(\"Met API failed:\", metError);\n                        }\n                        setExhibitions([\n                            ...harvardArtworks,\n                            ...metArtworks\n                        ]);\n                        if (harvardArtworks.length === 0 && metArtworks.length === 0) {\n                            setError(\"Unable to fetch artworks from either museum API\");\n                        }\n                    } catch (err) {\n                        setError(err.message || \"Failed to fetch artworks\");\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useExhibitions.useEffect.fetchExhibitions\"];\n            fetchExhibitions();\n        }\n    }[\"useExhibitions.useEffect\"], []);\n    return {\n        exhibitions,\n        loading,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFHckMsU0FBU0U7SUFDZCxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0gsK0NBQVFBLENBQWUsRUFBRTtJQUMvRCxNQUFNLENBQUNJLFNBQVNDLFdBQVcsR0FBR0wsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDTSxPQUFPQyxTQUFTLEdBQUdQLCtDQUFRQSxDQUFnQjtJQUVsREQsZ0RBQVNBO29DQUFDO1lBQ1IsTUFBTVM7NkRBQW1CO29CQUN2QkgsV0FBVztvQkFDWEUsU0FBUztvQkFFVCxJQUFJO3dCQUNGLElBQUlFLGtCQUFnQyxFQUFFO3dCQUN0QyxJQUFJQyxjQUE0QixFQUFFO3dCQUVsQyw0Q0FBNEM7d0JBQzVDLElBQUk7NEJBQ0YsTUFBTUMsYUFBYSxNQUFNQyxNQUN0Qjs0QkFHSCxJQUFJRCxXQUFXRSxFQUFFLEVBQUU7Z0NBQ2pCLE1BQU1DLGNBQWMsTUFBTUgsV0FBV0ksSUFBSTtnQ0FFekNOLGtCQUFrQixDQUFDSyxZQUFZRSxPQUFPLElBQUksRUFBRSxFQUN6Q0MsTUFBTTtpRkFBQyxDQUFDQyxVQUFpQkEsUUFBUUMsZUFBZTtnRkFDaERDLEtBQUssQ0FBQyxHQUFHLElBQ1RDLEdBQUc7aUZBQUMsQ0FBQ0g7NENBYUlBLGtCQUFBQTsrQ0FiYzs0Q0FDdEJJLElBQUksV0FBc0IsT0FBWEosUUFBUUksRUFBRTs0Q0FDekJDLE9BQU9MLFFBQVFLLEtBQUssSUFBSTs0Q0FDeEJDLE9BQU87NENBQ1BDLEtBQ0VQLFFBQVFPLEdBQUcsSUFDWCxvREFBK0QsT0FBWFAsUUFBUUksRUFBRTs0Q0FDaEVJLFFBQVE7NENBQ1JDLFVBQVVULFFBQVFDLGVBQWU7NENBQ2pDUyxhQUNFVixRQUFRVSxXQUFXLElBQ25CVixRQUFRVyxTQUFTLElBQ2pCOzRDQUNGQyxRQUFRWixFQUFBQSxrQkFBQUEsUUFBUWEsTUFBTSxjQUFkYix1Q0FBQUEsbUJBQUFBLGVBQWdCLENBQUMsRUFBRSxjQUFuQkEsdUNBQUFBLGlCQUFxQmMsSUFBSSxLQUFJOzRDQUNyQ0MsUUFBUWYsUUFBUWdCLFNBQVMsSUFBSWhCLFFBQVFlLE1BQU0sSUFBSTs0Q0FDL0NFLE9BQU9qQixRQUFRaUIsS0FBSyxJQUFJakIsUUFBUWtCLFNBQVMsSUFBSTs0Q0FDN0NDLFlBQVluQixRQUFRb0IsY0FBYzs0Q0FDbENDLFlBQVlyQixRQUFRcUIsVUFBVTs0Q0FDOUJDLFNBQVN0QixRQUFRc0IsT0FBTzs0Q0FDeEJDLFFBQVF2QixRQUFRdUIsTUFBTTs0Q0FDdEJDLFdBQVdDOzRDQUNYQyxTQUFTRDt3Q0FDWDs7OzRCQUNKLE9BQU87Z0NBQ0xFLFFBQVF2QyxLQUFLLENBQ1gsc0JBQ0FLLFdBQVdtQyxNQUFNLEVBQ2pCbkMsV0FBV29DLFVBQVU7NEJBRXpCO3dCQUNGLEVBQUUsT0FBT0MsY0FBYzs0QkFDckJILFFBQVF2QyxLQUFLLENBQUMsdUJBQXVCMEM7d0JBQ3ZDO3dCQUVBLGtEQUFrRDt3QkFDbEQsSUFBSTs0QkFDRixNQUFNQyxTQUFTLE1BQU1yQyxNQUNsQjs0QkFHSCxJQUFJcUMsT0FBT3BDLEVBQUUsRUFBRTtnQ0FDYixNQUFNcUMsVUFBVSxNQUFNRCxPQUFPbEMsSUFBSTtnQ0FFakMsTUFBTW9DLFlBQVksQ0FBQ0QsUUFBUUUsU0FBUyxJQUFJLEVBQUUsRUFBRWhDLEtBQUssQ0FBQyxHQUFHO2dDQUVyRCxNQUFNaUMsaUJBQWlCRixVQUFVOUIsR0FBRztnR0FBQyxPQUFPQzt3Q0FDMUMsSUFBSTs0Q0FDRixNQUFNZ0MsU0FBUyxNQUFNMUMsTUFDbkIsb0VBQXVFLE9BQUhVOzRDQUd0RSxJQUFJZ0MsT0FBT3pDLEVBQUUsRUFBRTtnREFDYixNQUFNMEMsVUFBVSxNQUFNRCxPQUFPdkMsSUFBSTtnREFDakMsTUFBTVksV0FDSjRCLFFBQVFDLGlCQUFpQixJQUFJRCxRQUFRRSxZQUFZO2dEQUVuRCxJQUFJOUIsWUFBWUEsU0FBUytCLElBQUksT0FBTyxJQUFJO29EQUN0QyxPQUFPO3dEQUNMcEMsSUFBSSxPQUF3QixPQUFqQmlDLFFBQVFJLFFBQVE7d0RBQzNCcEMsT0FBT2dDLFFBQVFoQyxLQUFLLElBQUk7d0RBQ3hCQyxPQUFPK0IsUUFBUUssVUFBVSxJQUFJO3dEQUM3Qm5DLEtBQUs4QixRQUFRTSxTQUFTO3dEQUN0Qm5DLFFBQVE7d0RBQ1JDLFVBQVVBO3dEQUNWRyxRQUFReUIsUUFBUU8saUJBQWlCLElBQUk7d0RBQ3JDN0IsUUFBUXNCLFFBQVF0QixNQUFNLElBQUk7d0RBQzFCRSxPQUFPb0IsUUFBUVEsVUFBVSxJQUFJO3dEQUM3Qm5DLGFBQ0UyQixRQUFRUyxVQUFVLElBQUk7d0RBQ3hCM0IsWUFBWWtCLFFBQVFsQixVQUFVO3dEQUM5QkUsWUFBWWdCLFFBQVFoQixVQUFVO3dEQUM5QkMsU0FBU2UsUUFBUWYsT0FBTzt3REFDeEJDLFFBQVFjLFFBQVFkLE1BQU07d0RBQ3RCQyxXQUFXQzt3REFDWEMsU0FBU0Q7b0RBQ1g7Z0RBQ0Y7NENBQ0Y7NENBQ0EsT0FBTzt3Q0FDVCxFQUFFLFVBQU07NENBQ04sT0FBTzt3Q0FDVDtvQ0FDRjs7Z0NBRUEsTUFBTXNCLFVBQVUsTUFBTUMsUUFBUUMsR0FBRyxDQUFDZDtnQ0FDbEMzQyxjQUFjdUQsUUFBUWhELE1BQU0sQ0FBQ21ELFNBQVNoRCxLQUFLLENBQUMsR0FBRzs0QkFDakQ7d0JBQ0YsRUFBRSxPQUFPaUQsVUFBVTs0QkFDakJ4QixRQUFRdkMsS0FBSyxDQUFDLG1CQUFtQitEO3dCQUNuQzt3QkFFQWxFLGVBQWU7K0JBQUlNOytCQUFvQkM7eUJBQVk7d0JBRW5ELElBQUlELGdCQUFnQjZELE1BQU0sS0FBSyxLQUFLNUQsWUFBWTRELE1BQU0sS0FBSyxHQUFHOzRCQUM1RC9ELFNBQVM7d0JBQ1g7b0JBQ0YsRUFBRSxPQUFPZ0UsS0FBVTt3QkFDakJoRSxTQUFTZ0UsSUFBSUMsT0FBTyxJQUFJO29CQUMxQixTQUFVO3dCQUNSbkUsV0FBVztvQkFDYjtnQkFDRjs7WUFFQUc7UUFDRjttQ0FBRyxFQUFFO0lBRUwsT0FBTztRQUFFTjtRQUFhRTtRQUFTRTtJQUFNO0FBQ3ZDIiwic291cmNlcyI6WyIvVXNlcnMvbmljaG9sYXNjYW5ueS9Eb2N1bWVudHMvZXhoaWJpdGlvbi1jdXJhdG9yL3NyYy9ob29rcy91c2VFeGhpYml0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBFeGhpYml0aW9uIH0gZnJvbSBcIi4uL3R5cGVzL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VFeGhpYml0aW9ucygpIHtcbiAgY29uc3QgW2V4aGliaXRpb25zLCBzZXRFeGhpYml0aW9uc10gPSB1c2VTdGF0ZTxFeGhpYml0aW9uW10+KFtdKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBmZXRjaEV4aGliaXRpb25zID0gYXN5bmMgKCkgPT4ge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgICB0cnkge1xuICAgICAgICBsZXQgaGFydmFyZEFydHdvcmtzOiBFeGhpYml0aW9uW10gPSBbXTtcbiAgICAgICAgbGV0IG1ldEFydHdvcmtzOiBFeGhpYml0aW9uW10gPSBbXTtcblxuICAgICAgICAvLyBIYXJ2YXJkIE9CSkVDVFMgQVBJIChpbmRpdmlkdWFsIGFydHdvcmtzKVxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGhhcnZhcmRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgIGBodHRwczovL2FwaS5oYXJ2YXJkYXJ0bXVzZXVtcy5vcmcvb2JqZWN0P3NpemU9NTAmaGFzaW1hZ2U9MSZhcGlrZXk9YThhNTA5ZGItYWFiZC00MmViLThlOWYtM2M1MThkNDE1NWEwYFxuICAgICAgICAgICk7XG5cbiAgICAgICAgICBpZiAoaGFydmFyZFJlcy5vaykge1xuICAgICAgICAgICAgY29uc3QgaGFydmFyZERhdGEgPSBhd2FpdCBoYXJ2YXJkUmVzLmpzb24oKTtcblxuICAgICAgICAgICAgaGFydmFyZEFydHdvcmtzID0gKGhhcnZhcmREYXRhLnJlY29yZHMgfHwgW10pXG4gICAgICAgICAgICAgIC5maWx0ZXIoKGFydHdvcms6IGFueSkgPT4gYXJ0d29yay5wcmltYXJ5aW1hZ2V1cmwpXG4gICAgICAgICAgICAgIC5zbGljZSgwLCAyNSlcbiAgICAgICAgICAgICAgLm1hcCgoYXJ0d29yazogYW55KSA9PiAoe1xuICAgICAgICAgICAgICAgIGlkOiBgaGFydmFyZC0ke2FydHdvcmsuaWR9YCxcbiAgICAgICAgICAgICAgICB0aXRsZTogYXJ0d29yay50aXRsZSB8fCBcIlVudGl0bGVkIEFydHdvcmtcIixcbiAgICAgICAgICAgICAgICB2ZW51ZTogXCJIYXJ2YXJkIEFydCBNdXNldW1zXCIsXG4gICAgICAgICAgICAgICAgdXJsOlxuICAgICAgICAgICAgICAgICAgYXJ0d29yay51cmwgfHxcbiAgICAgICAgICAgICAgICAgIGBodHRwczovL2hhcnZhcmRhcnRtdXNldW1zLm9yZy9jb2xsZWN0aW9ucy9vYmplY3QvJHthcnR3b3JrLmlkfWAsXG4gICAgICAgICAgICAgICAgc291cmNlOiBcIkhhcnZhcmRcIixcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogYXJ0d29yay5wcmltYXJ5aW1hZ2V1cmwsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICBhcnR3b3JrLmRlc2NyaXB0aW9uIHx8XG4gICAgICAgICAgICAgICAgICBhcnR3b3JrLmxhYmVsdGV4dCB8fFxuICAgICAgICAgICAgICAgICAgXCJObyBkZXNjcmlwdGlvbiBhdmFpbGFibGVcIixcbiAgICAgICAgICAgICAgICBhcnRpc3Q6IGFydHdvcmsucGVvcGxlPy5bMF0/Lm5hbWUgfHwgXCJVbmtub3duIEFydGlzdFwiLFxuICAgICAgICAgICAgICAgIG1lZGl1bTogYXJ0d29yay50ZWNobmlxdWUgfHwgYXJ0d29yay5tZWRpdW0gfHwgXCJVbmtub3duIE1lZGl1bVwiLFxuICAgICAgICAgICAgICAgIGRhdGVkOiBhcnR3b3JrLmRhdGVkIHx8IGFydHdvcmsuZGF0ZWJlZ2luIHx8IFwiVW5rbm93biBEYXRlXCIsXG4gICAgICAgICAgICAgICAgZGVwYXJ0bWVudDogYXJ0d29yay5jbGFzc2lmaWNhdGlvbixcbiAgICAgICAgICAgICAgICBkaW1lbnNpb25zOiBhcnR3b3JrLmRpbWVuc2lvbnMsXG4gICAgICAgICAgICAgICAgY3VsdHVyZTogYXJ0d29yay5jdWx0dXJlLFxuICAgICAgICAgICAgICAgIHBlcmlvZDogYXJ0d29yay5wZXJpb2QsXG4gICAgICAgICAgICAgICAgYmVnaW5kYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgZW5kZGF0ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICAgIFwiSGFydmFyZCBBUEkgRXJyb3I6XCIsXG4gICAgICAgICAgICAgIGhhcnZhcmRSZXMuc3RhdHVzLFxuICAgICAgICAgICAgICBoYXJ2YXJkUmVzLnN0YXR1c1RleHRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChoYXJ2YXJkRXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiSGFydmFyZCBBUEkgZmFpbGVkOlwiLCBoYXJ2YXJkRXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTWV0IEFQSSAoaW5kaXZpZHVhbCBhcnR3b3JrcykgLSBmYXN0ZXIgYXBwcm9hY2hcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBtZXRSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgIGBodHRwczovL2NvbGxlY3Rpb25hcGkubWV0bXVzZXVtLm9yZy9wdWJsaWMvY29sbGVjdGlvbi92MS9zZWFyY2g/aGFzSW1hZ2VzPXRydWUmcT1wYWludGluZ2BcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgaWYgKG1ldFJlcy5vaykge1xuICAgICAgICAgICAgY29uc3QgbWV0RGF0YSA9IGF3YWl0IG1ldFJlcy5qc29uKCk7XG5cbiAgICAgICAgICAgIGNvbnN0IG9iamVjdElkcyA9IChtZXREYXRhLm9iamVjdElEcyB8fCBbXSkuc2xpY2UoMCwgMTUpO1xuXG4gICAgICAgICAgICBjb25zdCBvYmplY3RQcm9taXNlcyA9IG9iamVjdElkcy5tYXAoYXN5bmMgKGlkKSA9PiB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgICAgICAgICBgaHR0cHM6Ly9jb2xsZWN0aW9uYXBpLm1ldG11c2V1bS5vcmcvcHVibGljL2NvbGxlY3Rpb24vdjEvb2JqZWN0cy8ke2lkfWBcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgaWYgKG9ialJlcy5vaykge1xuICAgICAgICAgICAgICAgICAgY29uc3Qgb2JqRGF0YSA9IGF3YWl0IG9ialJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgICBjb25zdCBpbWFnZVVybCA9XG4gICAgICAgICAgICAgICAgICAgIG9iakRhdGEucHJpbWFyeUltYWdlU21hbGwgfHwgb2JqRGF0YS5wcmltYXJ5SW1hZ2U7XG5cbiAgICAgICAgICAgICAgICAgIGlmIChpbWFnZVVybCAmJiBpbWFnZVVybC50cmltKCkgIT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZDogYG1ldC0ke29iakRhdGEub2JqZWN0SUR9YCxcbiAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogb2JqRGF0YS50aXRsZSB8fCBcIlVudGl0bGVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgdmVudWU6IG9iakRhdGEucmVwb3NpdG9yeSB8fCBcIlRoZSBNZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICB1cmw6IG9iakRhdGEub2JqZWN0VVJMLFxuICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogXCJUaGUgTWV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgaW1hZ2VVcmw6IGltYWdlVXJsLFxuICAgICAgICAgICAgICAgICAgICAgIGFydGlzdDogb2JqRGF0YS5hcnRpc3REaXNwbGF5TmFtZSB8fCBcIlVua25vd24gQXJ0aXN0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgbWVkaXVtOiBvYmpEYXRhLm1lZGl1bSB8fCBcIlVua25vd24gTWVkaXVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgZGF0ZWQ6IG9iakRhdGEub2JqZWN0RGF0ZSB8fCBcIlVua25vd24gRGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgICAgICAgICAgICAgICAgb2JqRGF0YS5jcmVkaXRMaW5lIHx8IFwiTm8gZGVzY3JpcHRpb24gYXZhaWxhYmxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgZGVwYXJ0bWVudDogb2JqRGF0YS5kZXBhcnRtZW50LFxuICAgICAgICAgICAgICAgICAgICAgIGRpbWVuc2lvbnM6IG9iakRhdGEuZGltZW5zaW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICBjdWx0dXJlOiBvYmpEYXRhLmN1bHR1cmUsXG4gICAgICAgICAgICAgICAgICAgICAgcGVyaW9kOiBvYmpEYXRhLnBlcmlvZCxcbiAgICAgICAgICAgICAgICAgICAgICBiZWdpbmRhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICBlbmRkYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbChvYmplY3RQcm9taXNlcyk7XG4gICAgICAgICAgICBtZXRBcnR3b3JrcyA9IHJlc3VsdHMuZmlsdGVyKEJvb2xlYW4pLnNsaWNlKDAsIDEwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKG1ldEVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIk1ldCBBUEkgZmFpbGVkOlwiLCBtZXRFcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRFeGhpYml0aW9ucyhbLi4uaGFydmFyZEFydHdvcmtzLCAuLi5tZXRBcnR3b3Jrc10pO1xuXG4gICAgICAgIGlmIChoYXJ2YXJkQXJ0d29ya3MubGVuZ3RoID09PSAwICYmIG1ldEFydHdvcmtzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHNldEVycm9yKFwiVW5hYmxlIHRvIGZldGNoIGFydHdvcmtzIGZyb20gZWl0aGVyIG11c2V1bSBBUElcIik7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAgIHNldEVycm9yKGVyci5tZXNzYWdlIHx8IFwiRmFpbGVkIHRvIGZldGNoIGFydHdvcmtzXCIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZldGNoRXhoaWJpdGlvbnMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiB7IGV4aGliaXRpb25zLCBsb2FkaW5nLCBlcnJvciB9O1xufVxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlRXhoaWJpdGlvbnMiLCJleGhpYml0aW9ucyIsInNldEV4aGliaXRpb25zIiwibG9hZGluZyIsInNldExvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiZmV0Y2hFeGhpYml0aW9ucyIsImhhcnZhcmRBcnR3b3JrcyIsIm1ldEFydHdvcmtzIiwiaGFydmFyZFJlcyIsImZldGNoIiwib2siLCJoYXJ2YXJkRGF0YSIsImpzb24iLCJyZWNvcmRzIiwiZmlsdGVyIiwiYXJ0d29yayIsInByaW1hcnlpbWFnZXVybCIsInNsaWNlIiwibWFwIiwiaWQiLCJ0aXRsZSIsInZlbnVlIiwidXJsIiwic291cmNlIiwiaW1hZ2VVcmwiLCJkZXNjcmlwdGlvbiIsImxhYmVsdGV4dCIsImFydGlzdCIsInBlb3BsZSIsIm5hbWUiLCJtZWRpdW0iLCJ0ZWNobmlxdWUiLCJkYXRlZCIsImRhdGViZWdpbiIsImRlcGFydG1lbnQiLCJjbGFzc2lmaWNhdGlvbiIsImRpbWVuc2lvbnMiLCJjdWx0dXJlIiwicGVyaW9kIiwiYmVnaW5kYXRlIiwidW5kZWZpbmVkIiwiZW5kZGF0ZSIsImNvbnNvbGUiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwiaGFydmFyZEVycm9yIiwibWV0UmVzIiwibWV0RGF0YSIsIm9iamVjdElkcyIsIm9iamVjdElEcyIsIm9iamVjdFByb21pc2VzIiwib2JqUmVzIiwib2JqRGF0YSIsInByaW1hcnlJbWFnZVNtYWxsIiwicHJpbWFyeUltYWdlIiwidHJpbSIsIm9iamVjdElEIiwicmVwb3NpdG9yeSIsIm9iamVjdFVSTCIsImFydGlzdERpc3BsYXlOYW1lIiwib2JqZWN0RGF0ZSIsImNyZWRpdExpbmUiLCJyZXN1bHRzIiwiUHJvbWlzZSIsImFsbCIsIkJvb2xlYW4iLCJtZXRFcnJvciIsImxlbmd0aCIsImVyciIsIm1lc3NhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useExhibitions.ts\n"));

/***/ })

});